{"includedArchiveIdentifiers":["MapsNativeSDK"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/baseconcepts","title":"Базовые возможности MapsNativeSDK","type":"article"},{"path":"\/documentation\/mapsnativesdk\/cameramoving","title":"Управление камерой","type":"article"},{"path":"\/documentation\/mapsnativesdk\/controls","title":"Элементы управления картой","type":"article"},{"path":"\/documentation\/mapsnativesdk\/followingmode","title":"Режимы следования","type":"article"},{"path":"\/documentation\/mapsnativesdk\/gestures","title":"Жесты","type":"article"},{"path":"\/documentation\/mapsnativesdk\/lifecycle","title":"Отслеживание событий карты","type":"article"},{"path":"\/documentation\/mapsnativesdk\/markers","title":"Маркеры","type":"article"},{"path":"\/documentation\/mapsnativesdk\/startusing","title":"Начало работы с MapsNativeSDK","type":"article"},{"path":"\/documentation\/mapsnativesdk\/styles","title":"Оформление карты","type":"article"},{"path":"\/documentation\/mapsnativesdk\/updatesdk","title":"Переход с JS MapsSDK","type":"article"},{"path":"\/documentation\/mapsnativesdk\/userpointer","title":"Индикатор пользователя","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/init(rawvalue:)","title":"init(rawValue: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/rawvalue","title":"var rawValue: CGFloat","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/disabled","title":"static let disabled: CameraController.DecelerationRate","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/fast","title":"static let fast: CameraController.DecelerationRate","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/normal","title":"static let normal: CameraController.DecelerationRate","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate","title":"CameraController.DecelerationRate","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/altitudemeters","title":"var altitudeMeters: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/bearing","title":"var bearing: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/bearinginertiarate","title":"var bearingInertiaRate: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/centercoordinates","title":"var centerCoordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/limitsboundingbox","title":"var limitsBoundingBox: MapBounds?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/mapbounds","title":"var mapBounds: MapBounds","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/maxzoom","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/minzoom","title":"var minZoom: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/pitch","title":"var pitch: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/scrollinertiarate","title":"var scrollInertiaRate: CameraController.DecelerationRate","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoom","title":"var zoom: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoominertiarate","title":"var zoomInertiaRate: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/altitudemetersbyzoom(_:)","title":"func altitudeMetersByZoom(Double) -> Double","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/calculateanimationduration(coordinates:cameraoptions:animationoptions:)","title":"func calculateAnimationDuration(coordinates: MapCameraCoordinates?, cameraOptions: MapCameraOptions?, animationOptions: MapAnimationOptions) -> TimeInterval","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/calculateboundingbox(coordinates:cameraoptions:)","title":"func calculateBoundingBox(coordinates: MapCameraCoordinates, cameraOptions: MapCameraOptions) -> MapBounds","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/coordinatesbyviewpoint(_:)","title":"func coordinatesByViewPoint(CGPoint) -> Coordinates?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/coordinatesbyviewpoints(_:)","title":"func coordinatesByViewPoints([CGPoint]) -> [Coordinates?]","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/featuresinrect(rect:layer:)","title":"func featuresInRect(rect: CameraController.RectangleDimensions, layer: String) -> [MapFeatureId]","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/fitbounds(_:padding:animationduration:reason:)","title":"func fitBounds(MapBounds, padding: MapEdgeInsets, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flyto(coordinates:cameraoptions:animationoptions:reason:resetfollowingmode:)","title":"func flyTo(coordinates: MapCameraCoordinates?, cameraOptions: MapCameraOptions?, animationOptions: MapAnimationOptions, reason: Any?, resetFollowingMode: Bool) async -> MapCameraAnimationResult","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flyto(coordinates:cameraoptions:animationoptions:reason:resetfollowingmode:completion:)","title":"func flyTo(coordinates: MapCameraCoordinates?, cameraOptions: MapCameraOptions?, animationOptions: MapAnimationOptions?, reason: Any?, resetFollowingMode: Bool, completion: ((MapCameraAnimationResult) -> Void)?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flytocurrentlocation(zoomlevel:animationoptions:reason:resetfollowingmode:)","title":"func flyToCurrentLocation(zoomLevel: Double?, animationOptions: MapAnimationOptions?, reason: Any?, resetFollowingMode: Bool) async -> MapCameraAnimationResult","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flytocurrentlocation(zoomlevel:animationoptions:reason:resetfollowingmode:completion:)","title":"func flyToCurrentLocation(zoomLevel: Double?, animationOptions: MapAnimationOptions?, reason: Any?, resetFollowingMode: Bool, completion: ((MapCameraAnimationResult) -> Void)?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/metersperpoint(zoom:coordinates:)","title":"func metersPerPoint(zoom: Double, coordinates: Coordinates) -> Double","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/pointspermeter(zoom:coordinates:)","title":"func pointsPerMeter(zoom: Double, coordinates: Coordinates) -> Double","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setbearing(degrees:animationduration:reason:)","title":"func setBearing(degrees: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setpadding(_:animationduration:reason:)","title":"func setPadding(MapEdgeInsets, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setpitch(degrees:animationduration:reason:)","title":"func setPitch(degrees: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setpitchrange(minpitchdegrees:maxpitchdegrees:)","title":"func setPitchRange(minPitchDegrees: Double?, maxPitchDegrees: Double?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setzoom(_:anchor:animationduration:reason:)","title":"func setZoom(Double, anchor: CGPoint?, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setzoomrange(minzoom:maxzoom:)","title":"func setZoomRange(minZoom: Double?, maxZoom: Double?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/stopanimation()","title":"func stopAnimation()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/viewpointbycoordinates(_:)","title":"func viewPointByCoordinates(Coordinates) -> CGPoint?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/viewpointsbycoordinates(_:)","title":"func viewPointsByCoordinates([Coordinates]) -> [(position: CGPoint, opacity: Double)]","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoombyaltitudemeters(_:)","title":"func zoomByAltitudeMeters(Double) -> Double","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoomin(step:animationduration:reason:)","title":"func zoomIn(step: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoomout(step:animationduration:reason:)","title":"func zoomOut(step: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/rectangledimensions\/pixels(_:)","title":"case pixels(CGRect)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/rectangledimensions\/points(_:)","title":"case points(CGRect)","type":"case"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/rectangledimensions","title":"CameraController.RectangleDimensions","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller","title":"CameraController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/init(id:encodedstring:receivetapevents:)","title":"init(id: String, encodedString: String, receiveTapEvents: Bool) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/init(id:json:receivetapevents:)","title":"init(id: String, json: String, receiveTapEvents: Bool) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/init(id:jsondata:receivetapevents:)","title":"init(id: String, jsonData: Data, receiveTapEvents: Bool) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/id","title":"var id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/setencodedpolyline(_:)","title":"func setEncodedPolyline(String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/setgeojson(_:)","title":"func setGeoJSON(String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/setreceivetapevents(_:)","title":"func setReceiveTapEvents(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/==(_:_:)","title":"static func == (MapDataSource, MapDataSource) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapdatasource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapdatasource","title":"MapDataSource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/image","title":"var image: MapNodeImage?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/size","title":"var size: CGSize","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapimagenode\/map2dnode-implementations","title":"Map2DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/anchor","title":"var anchor: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapimagenode\/mapanchorednode-implementations","title":"MapAnchoredNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapimagenode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapimagenode","title":"MapImageNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/imagesequence","title":"var imageSequence: MapNodeImageSequence?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/size","title":"var size: CGSize","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/map2dnode-implementations","title":"Map2DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/anchor","title":"var anchor: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/mapanchorednode-implementations","title":"MapAnchoredNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode","title":"MapImageSequenceNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/init(id:sourceid:paint:layout:)","title":"init(id: String, sourceID: String, paint: any PaintProperties, layout: LayoutProperties) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/init(json:)","title":"init(json: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/isvisible","title":"var isVisible: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/==(_:_:)","title":"static func == (MapLayer, MapLayer) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/maplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maplayer","title":"MapLayer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/accuracycolor","title":"var accuracyColor: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/accuracymeters","title":"var accuracyMeters: Float","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/bearing","title":"var bearing: Angle?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/coordinates","title":"var coordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/drawaccuracy","title":"var drawAccuracy: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/drawbearing","title":"var drawBearing: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/drawpoint","title":"var drawPoint: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/outlinecolor","title":"var outlineColor: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maplocationnode\/map2dnode-implementations","title":"Map2DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplocationnode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/maplocationnode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maplocationnode","title":"MapLocationNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnode\/map2dnode-implementations","title":"Map2DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapnode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnode","title":"MapNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeanimation\/init(action:)","title":"init(action: MapNodeAction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeanimation\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeanimation\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodeanimation\/mapasset-implementations","title":"MapAsset Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodeanimation","title":"MapNodeAnimation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeanimation3d\/init(action:)","title":"init(action: MapNodeAction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeanimation3d\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeanimation3d\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodeanimation3d\/mapasset-implementations","title":"MapAsset Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodeanimation3d","title":"MapNodeAnimation3D","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimage\/init(imageid:)","title":"init(imageID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimage\/imageid","title":"var imageID: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimage\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimage\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodeimage\/mapasset-implementations","title":"MapAsset Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodeimage","title":"MapNodeImage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence\/init(imageid:framesperrow:framescount:duration:)","title":"init(imageID: String, framesPerRow: UInt32, framesCount: UInt32, duration: TimeInterval)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence\/init(imageids:duration:)","title":"init(imageIDs: [String], duration: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence\/mapasset-implementations","title":"MapAsset Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence","title":"MapNodeImageSequence","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeskeletalmesh\/init(modelid:)","title":"init(modelID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeskeletalmesh\/modelid","title":"var modelID: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnodeskeletalmesh\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeskeletalmesh\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodeskeletalmesh\/mapasset-implementations","title":"MapAsset Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodeskeletalmesh","title":"MapNodeSkeletalMesh","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodestaticmesh\/init(modelid:)","title":"init(modelID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodestaticmesh\/modelid","title":"var modelID: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnodestaticmesh\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodestaticmesh\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodestaticmesh\/mapasset-implementations","title":"MapAsset Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodestaticmesh","title":"MapNodeStaticMesh","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodevectorshape\/init(shapeid:)","title":"init(shapeID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodevectorshape\/shapeid","title":"var shapeID: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnodevectorshape\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodevectorshape\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodevectorshape\/mapasset-implementations","title":"MapAsset Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodevectorshape","title":"MapNodeVectorShape","type":"class"},{"path":"\/documentation\/mapsnativesdk\/mapobjectstorage","title":"MapObjectStorage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappin\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mappin\/init(_:coordinates:)","title":"init(String, coordinates: Coordinates)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mappin\/init(_:coordinates:node:)","title":"init(String, coordinates: Coordinates, node: any MapBaseNode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappin\/coordinates","title":"var coordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mappin\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mappin\/node","title":"var node: MapPinNode?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mappin\/offset","title":"var offset: CGVector","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mappin\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappin\/setcoordinatesanimated(coordinates:duration:easing:)","title":"func setCoordinatesAnimated(coordinates: Coordinates, duration: TimeInterval, easing: MapAnimationEasing)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mappin","title":"MapPin","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/addpins(_:)","title":"func addPins([MapPin])","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/apply(force:)","title":"func apply(force: Bool)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/findpin(id:)","title":"func findPin(id: String) -> MapPin?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/registershape(name:svgdata:)","title":"func registerShape(name: String, svgData: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/removeallpins()","title":"func removeAllPins()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/removepins(_:)","title":"func removePins([MapPin])","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapscene","title":"MapScene","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/currentanimationname","title":"var currentAnimationName: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/skeletalmesh","title":"var skeletalMesh: MapNodeSkeletalMesh?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/startanimationattime(_:)","title":"func startAnimationAtTime(TimeInterval)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/animation3d","title":"var animation3D: MapNodeAnimation3D?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/position3d","title":"var position3D: Vector3D","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/rotation3d","title":"var rotation3D: Angle3D","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/scale3d","title":"var scale3D: Vector3D","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/map3dnode-implementations","title":"Map3DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapskeletalmeshnode","title":"MapSkeletalMeshNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/imagesequence","title":"var imageSequence: MapNodeImageSequence?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/size","title":"var size: CGSize","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/transitionratio","title":"var transitionRatio: Float","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/map2dnode-implementations","title":"Map2DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/anchor","title":"var anchor: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/mapanchorednode-implementations","title":"MapAnchoredNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapslideshownode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapslideshownode","title":"MapSlideshowNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/staticmesh","title":"var staticMesh: MapNodeStaticMesh?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/animation3d","title":"var animation3D: MapNodeAnimation3D?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/position3d","title":"var position3D: Vector3D","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/rotation3d","title":"var rotation3D: Angle3D","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/scale3d","title":"var scale3D: Vector3D","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/map3dnode-implementations","title":"Map3DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapstaticmeshnode","title":"MapStaticMeshNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/activatestate(_:)","title":"func activateState(String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/activatestate(_:duration:easing:)","title":"func activateState(String, duration: TimeInterval, easing: MapAnimationEasing)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/setnodeforstate(_:forstate:)","title":"func setNodeForState((any MapBaseNode)?, forState: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapswitchernode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapswitchernode","title":"MapSwitcherNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/fontcolor","title":"var fontColor: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/fontname","title":"var fontName: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/lineheight","title":"var lineHeight: CGFloat","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/maxwidth","title":"var maxWidth: Float","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/outlinecolor","title":"var outlineColor: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/useoutline","title":"var useOutline: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maptextnode\/map2dnode-implementations","title":"Map2DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/anchor","title":"var anchor: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maptextnode\/mapanchorednode-implementations","title":"MapAnchoredNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/maptextnode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maptextnode","title":"MapTextNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/image","title":"var image: MapNodeImage?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/size","title":"var size: CGSize","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/storage","title":"let storage: MapObjectStorage","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/vectorshape","title":"var vectorShape: MapNodeVectorShape?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/map2dnode-implementations","title":"Map2DNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/anchor","title":"var anchor: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/mapanchorednode-implementations","title":"MapAnchoredNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/hidden","title":"var hidden: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode\/mapbasenode-implementations","title":"MapBaseNode Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapvectorshapenode","title":"MapVectorShapeNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapview\/init(frame:configuration:delegate:)","title":"init(frame: CGRect, configuration: MapConfiguration, delegate: (any MapViewDelegate)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/camera","title":"let camera: CameraController","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/delegate","title":"var delegate: (any MapViewDelegate)?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/iscurrentlocationbuttonvisible","title":"var isCurrentLocationButtonVisible: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/isrotategesturesenabled","title":"var isRotateGesturesEnabled: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/isscrollgesturesenabled","title":"var isScrollGesturesEnabled: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/iszoomgesturesenabled","title":"var isZoomGesturesEnabled: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/logoalignment","title":"var logoAlignment: MapLogoAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/logoignoressafearea","title":"var logoIgnoresSafeArea: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/logoinsets","title":"var logoInsets: MapEdgeInsets","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/mode","title":"var mode: MapMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/overlay","title":"let overlay: OverlayController","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/showscompass","title":"var showsCompass: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/showszoombuttons","title":"var showsZoomButtons: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/style","title":"var style: MapStyle?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/userpointer","title":"let userPointer: UserPointerController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/cleanup()","title":"func cleanUp()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/deselectmapfeature()","title":"func deselectMapFeature()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/ontapcurrentlocationbutton()","title":"func onTapCurrentLocationButton()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/selectmapfeature(sourceid:refid:)","title":"func selectMapFeature(sourceId: String, refId: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/setdebugoption(_:_:)","title":"func setDebugOption(String, String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/setmode(_:)","title":"func setMode(MapMode)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/setpresentwithtransactionifnotsupports(gpufamily:)","title":"func setPresentWithTransactionIfNotSupports(gpuFamily: MTLGPUFamily)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/setstyle(_:force:)","title":"func setStyle(MapStyle, force: Bool)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/viewdidmovetosuperview()","title":"func viewDidMoveToSuperview()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/toopaque()","title":"func toOpaque() -> OpaquePointer","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/fromopaque(_:)","title":"static func fromOpaque(OpaquePointer) -> Self","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapview\/opaquepointerconvertable-implementations","title":"OpaquePointerConvertable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapview","title":"MapView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/scene","title":"var scene: MapScene!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/addmarker(_:)","title":"func addMarker(Marker)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/removeallmarkers()","title":"func removeAllMarkers()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/removemarker(id:)","title":"func removeMarker(id: UInt32)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/overlaycontroller","title":"OverlayController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/accuracy","title":"var accuracy: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/bearing","title":"var bearing: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/coordinates","title":"var coordinates: Coordinates?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/isvisible","title":"var isVisible: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/setcurrentlocation(bearing:animationduration:)","title":"func setCurrentLocation(bearing: Double?, animationDuration: Double?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/setcurrentlocation(coordinates:accuracy:animationduration:)","title":"func setCurrentLocation(coordinates: Coordinates?, accuracy: Double?, animationDuration: Double?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/setcurrentlocation(coordinates:bearing:accuracy:animationduration:)","title":"func setCurrentLocation(coordinates: Coordinates?, bearing: Double?, accuracy: Double?, animationDuration: Double?)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/userpointercontroller","title":"UserPointerController","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/json\/stringrepresentation-2v8qg","title":"var stringRepresentation: String","type":"property"}],"title":"JSON Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/json\/stringrepresentation","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/json","title":"JSON","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/map2dnode\/animation-1go5e","title":"var animation: MapNodeAnimation?","type":"property"}],"title":"Map2DNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/map2dnode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/map2dnode\/position-6945z","title":"var position: CGPoint","type":"property"}],"title":"Map2DNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/map2dnode\/position","title":"var position: CGPoint","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/map2dnode\/rotation-11o5v","title":"var rotation: Angle","type":"property"}],"title":"Map2DNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/map2dnode\/rotation","title":"var rotation: Angle","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/map2dnode\/scale-894e0","title":"var scale: CGVector","type":"property"}],"title":"Map2DNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/map2dnode\/scale","title":"var scale: CGVector","type":"property"}],"path":"\/documentation\/mapsnativesdk\/map2dnode","title":"Map2DNode","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/map3dnode\/animation3d","title":"var animation3D: MapNodeAnimation3D?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/map3dnode\/position3d-3kmsk","title":"var position3D: Vector3D","type":"property"}],"title":"Map3DNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/map3dnode\/position3d","title":"var position3D: Vector3D","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/map3dnode\/rotation3d-12ycy","title":"var rotation3D: Angle3D","type":"property"}],"title":"Map3DNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/map3dnode\/rotation3d","title":"var rotation3D: Angle3D","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/map3dnode\/scale3d-4is5k","title":"var scale3D: Vector3D","type":"property"}],"title":"Map3DNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/map3dnode\/scale3d","title":"var scale3D: Vector3D","type":"property"}],"path":"\/documentation\/mapsnativesdk\/map3dnode","title":"Map3DNode","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapanchorednode\/anchor-25ckh","title":"var anchor: CGPoint","type":"property"}],"title":"MapAnchoredNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapanchorednode\/anchor","title":"var anchor: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapanchorednode","title":"MapAnchoredNode","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapasset\/name-18q3g","title":"var name: String?","type":"property"}],"title":"MapAsset Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapasset\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapasset","title":"MapAsset","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapbasenode\/childnodes-9ed1l","title":"var childNodes: [any MapBaseNode]","type":"property"}],"title":"MapBaseNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapbasenode\/childnodes","title":"var childNodes: [any MapBaseNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapbasenode\/hidden","title":"var hidden: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapbasenode\/id-9kqo8","title":"var id: String?","type":"property"}],"title":"MapBaseNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapbasenode\/id","title":"var id: String?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapbasenode\/keepmaprotation-1e6ap","title":"var keepMapRotation: Bool","type":"property"}],"title":"MapBaseNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapbasenode\/keepmaprotation","title":"var keepMapRotation: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapbasenode\/layer","title":"var layer: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapbasenode\/order","title":"var order: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapbasenode\/addchild(_:)-3nnxg","title":"func addChild(any MapBaseNode)","type":"method"}],"title":"MapBaseNode Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapbasenode\/addchild(_:)","title":"func addChild(any MapBaseNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapbasenode","title":"MapBaseNode","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsharedobject\/storage","title":"var storage: MapObjectStorage","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsharedobject","title":"MapSharedObject","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didchangemodeto:)-605ey","title":"func mapView(MapView, didChangeModeTo: MapMode)","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didchangemodeto:)","title":"func mapView(MapView, didChangeModeTo: MapMode)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didfailwitherror:)-3dkqj","title":"func mapView(MapView, didFailWithError: any Error)","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didfailwitherror:)","title":"func mapView(MapView, didFailWithError: any Error)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didreceiveevent:)-7k969","title":"func mapView(MapView, didReceiveEvent: MapEvent)","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didreceiveevent:)","title":"func mapView(MapView, didReceiveEvent: MapEvent)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:willchangemodeto:)-kz0b","title":"func mapView(MapView, willChangeModeTo: MapMode) -> MapMode","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:willchangemodeto:)","title":"func mapView(MapView, willChangeModeTo: MapMode) -> MapMode","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate","title":"MapViewDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintproperties\/type","title":"var type: RenderingType","type":"property"}],"path":"\/documentation\/mapsnativesdk\/paintproperties","title":"PaintProperties","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapsnativesdk\/angle\/init(degrees:)","title":"init(degrees: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/angle\/init(radians:)","title":"init(radians: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle\/degrees","title":"var degrees: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/angle\/radians","title":"var radians: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle\/degrees(_:)","title":"static func degrees(Double) -> Angle","type":"method"},{"path":"\/documentation\/mapsnativesdk\/angle\/radians(_:)","title":"static func radians(Double) -> Angle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapsnativesdk\/angle\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/angle\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/angle","title":"Angle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle3d\/init(_:unit:)","title":"init(Vector3D, unit: Unit)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/angle3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle3d\/nativerepresentation","title":"var nativeRepresentation: Vector3D","type":"property"},{"path":"\/documentation\/mapsnativesdk\/angle3d\/unit","title":"var unit: Unit","type":"property"},{"path":"\/documentation\/mapsnativesdk\/angle3d\/vec","title":"var vec: Vector3D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/angle3d\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/angle3d","title":"Angle3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/init(lng:lat:)","title":"init(lng: Double, lat: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/lat","title":"let lat: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/lng","title":"let lng: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/coordinates\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/coordinates","title":"Coordinates","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/currentlocationcolors\/init(accuracycolor:pointcolormain:pointcolorsub:bearingcolormain:bearingcolorsub:)","title":"init(accuracyColor: CGColor, pointColorMain: CGColor, pointColorSub: CGColor, bearingColorMain: CGColor, bearingColorSub: CGColor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/currentlocationcolors\/accuracycolor","title":"let accuracyColor: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationcolors\/bearingcolormain","title":"let bearingColorMain: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationcolors\/bearingcolorsub","title":"let bearingColorSub: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationcolors\/pointcolormain","title":"let pointColorMain: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationcolors\/pointcolorsub","title":"let pointColorSub: CGColor","type":"property"}],"path":"\/documentation\/mapsnativesdk\/currentlocationcolors","title":"CurrentLocationColors","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/init(modelname:scale:xoffset:yoffset:zoffset:xrotation:yrotation:zrotation:tilescalelevel:)","title":"init(modelName: String, scale: CGFloat, xOffset: CGFloat, yOffset: CGFloat, zOffset: CGFloat, xRotation: Angle, yRotation: Angle, zRotation: Angle, tileScaleLevel: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/modelname","title":"let modelName: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/scale","title":"let scale: CGFloat","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/tilescalelevel","title":"let tileScaleLevel: UInt8","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/xoffset","title":"let xOffset: CGFloat","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/xrotation","title":"let xRotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/yoffset","title":"let yOffset: CGFloat","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/yrotation","title":"let yRotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/zoffset","title":"let zOffset: CGFloat","type":"property"},{"path":"\/documentation\/mapsnativesdk\/currentlocationmodel\/zrotation","title":"let zRotation: Angle","type":"property"}],"path":"\/documentation\/mapsnativesdk\/currentlocationmodel","title":"CurrentLocationModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/diskcacheoptions\/init(diskcachepath:maxcachesizebytes:cachefilettlsec:)","title":"init(diskCachePath: String, maxCacheSizeBytes: UInt64, cacheFileTTLSec: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/diskcacheoptions\/cachefilettlsec","title":"let cacheFileTTLSec: UInt64","type":"property"},{"path":"\/documentation\/mapsnativesdk\/diskcacheoptions\/diskcachepath","title":"let diskCachePath: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/diskcacheoptions\/maxcachesizebytes","title":"let maxCacheSizeBytes: UInt64","type":"property"}],"path":"\/documentation\/mapsnativesdk\/diskcacheoptions","title":"DiskCacheOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/init(fillcolor:fillopacity:)","title":"init(fillColor: PaintColor, fillOpacity: PaintOpacity)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/fillcolor","title":"let fillColor: PaintColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/fillopacity","title":"let fillOpacity: PaintOpacity","type":"property"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/type","title":"let type: RenderingType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/stringrepresentation","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/paintproperties-implementations","title":"PaintProperties Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/fillpaintproperties","title":"FillPaintProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/init(linecap:linejoin:linemiterlimit:lineroundlimit:linesortkey:visibility:)","title":"init(lineCap: LayoutProperties.LineCap, lineJoin: LayoutProperties.LineJoin, lineMiterLimit: Double?, lineRoundLimit: Double?, lineSortKey: Double?, visibility: LayoutProperties.Visibility)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.property","title":"let lineCap: LayoutProperties.LineCap","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.property","title":"let lineJoin: LayoutProperties.LineJoin","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linemiterlimit","title":"let lineMiterLimit: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/lineroundlimit","title":"let lineRoundLimit: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linesortkey","title":"let lineSortKey: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.property","title":"let visibility: LayoutProperties.Visibility","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/default","title":"static let `default`: LayoutProperties","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/butt","title":"case butt","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/round","title":"case round","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum","title":"LayoutProperties.LineCap","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/bevel","title":"case bevel","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/miter","title":"case miter","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/round","title":"case round","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum","title":"LayoutProperties.LineJoin","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/visible","title":"case visible","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum","title":"LayoutProperties.Visibility","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties","title":"LayoutProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/init(dash:gap:)","title":"init(dash: Double, gap: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/dash","title":"let dash: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/gap","title":"let gap: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/linedashes","title":"LineDashes","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/init(linecolor:linewidth:lineopacity:dashes:)","title":"init(lineColor: PaintColor, lineWidth: Double, lineOpacity: PaintOpacity, dashes: LineDashes?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/dashes","title":"let dashes: LineDashes?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/linecolor","title":"let lineColor: PaintColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/lineopacity","title":"let lineOpacity: PaintOpacity","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/linewidth","title":"let lineWidth: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/type","title":"let type: RenderingType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/stringrepresentation","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/paintproperties-implementations","title":"PaintProperties Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/linepaintproperties","title":"LinePaintProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/init(easing:duration:)","title":"init(easing: MapCameraAnimationEasing, duration: MapAnimationOptions.Duration?)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.property","title":"var duration: MapAnimationOptions.Duration?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/easing","title":"var easing: MapCameraAnimationEasing","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/linear(value:)","title":"case linear(value: TimeInterval)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/max(value:)","title":"case max(value: TimeInterval)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum","title":"MapAnimationOptions.Duration","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/mapanimationoptions","title":"MapAnimationOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/init(southwest:northeast:)","title":"init(southwest: Coordinates, northeast: Coordinates)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/northeast","title":"let northeast: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/southwest","title":"let southwest: Coordinates","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapbounds\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapbounds","title":"MapBounds","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/init(bearing:zoom:pitch:padding:)","title":"init(bearing: Double?, zoom: Double?, pitch: Double?, padding: MapEdgeInsets?)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/bearing","title":"var bearing: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/padding","title":"var padding: MapEdgeInsets?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/pitch","title":"var pitch: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/zoom","title":"var zoom: Double?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapcameraoptions","title":"MapCameraOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:pitch:bearing:customstyle:fonts:selectfeatures:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, pitch: Angle, bearing: Angle, customStyle: String, fonts: [String], selectFeatures: FeaturesSelectionMode, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:pitch:bearing:predefinedstyle:fonts:selectfeatures:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, pitch: Angle, bearing: Angle, predefinedStyle: MapPredefinedStyle, fonts: [String], selectFeatures: FeaturesSelectionMode, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:pitch:bearing:remotestyleurl:fonts:selectfeatures:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, pitch: Angle, bearing: Angle, remoteStyleURL: URL, fonts: [String], selectFeatures: FeaturesSelectionMode, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:pitch:bearing:style:fonts:selectfeatures:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, pitch: Angle, bearing: Angle, style: MapStyle, fonts: [String], selectFeatures: FeaturesSelectionMode, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/bearing","title":"let bearing: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.property","title":"let cameraMode: MapConfiguration.CameraMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/center","title":"let center: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/fonts","title":"let fonts: [String]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/markersoverlap","title":"let markersOverlap: MarkersOverlapMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/pitch","title":"let pitch: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/selectfeatures","title":"let selectFeatures: FeaturesSelectionMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.property","title":"let style: MapConfiguration.Style","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/zoom","title":"let zoom: Double","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/earth","title":"case earth","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/perspective","title":"case perspective","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum","title":"MapConfiguration.CameraMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/instance(_:)","title":"case instance(MapStyle)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/json(_:)","title":"case json(String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/predefined(_:)","title":"case predefined(MapPredefinedStyle)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/url(_:)","title":"case url(URL)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum","title":"MapConfiguration.Style","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration","title":"MapConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/init(size:)","title":"init(size: CGSize)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/background(_:)","title":"func background(CGColor) -> MapImage","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/background(_:in:fillstyle:)","title":"func background<S>(CGColor, in: S, fillStyle: FillStyle) -> MapImage","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> MapImage","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/fill(color:)","title":"func fill(color: CGColor) -> MapImage","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/padding(_:)","title":"func padding(CGFloat) -> MapImage","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> MapImage","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapimage\/stroke(_:color:style:)","title":"func stroke<S>(S, color: CGColor, style: StrokeStyle) -> MapImage","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapimage","title":"MapImage","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/==(_:_:)","title":"static func == (MapStyle, MapStyle) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(from:)","title":"init?(from: MapView)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(json:)","title":"init(json: String) async throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(predefinedstyle:)","title":"init(predefinedStyle: MapPredefinedStyle) async throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(url:)","title":"init(url: URL) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/currentlocationcolors","title":"var currentLocationColors: CurrentLocationColors","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/currentlocationimage","title":"var currentLocationImage: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/currentlocationmodel","title":"var currentLocationModel: CurrentLocationModel?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/layers","title":"var layers: [MapLayer]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/sources","title":"var sources: [MapDataSource]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addcgcontext(imageid:context:scale:)","title":"func addCGContext(imageID: String, context: CGContext, scale: CGFloat) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(imageid:image:scale:)","title":"func addImage(imageID: String, image: CGImage, scale: CGFloat) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(imageid:mapimage:scale:)","title":"func addImage(imageID: String, mapImage: MapImage, scale: CGFloat) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(imageid:pngimagedata:scale:)","title":"func addImage(imageID: String, pngImageData: Data, scale: CGFloat) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(imageid:scale:_:)","title":"func addImage(imageID: String, scale: CGFloat, () -> MapImage) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(imageid:svgdata:scale:size:)","title":"func addImage(imageID: String, svgData: String, scale: CGFloat, size: CGSize) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addlayer(_:)","title":"func addLayer(MapLayer) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addmodel(modelid:data:)","title":"func addModel(modelID: String, data: Data)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addrawrgbabitmap(imageid:bitmap:width:height:scale:)","title":"func addRawRGBABitmap(imageID: String, bitmap: UnsafeRawPointer!, width: UInt32, height: UInt32, scale: CGFloat) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addsource(_:)","title":"func addSource(MapDataSource) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addsources(_:andlayers:)","title":"func addSources([MapDataSource], andLayers: [MapLayer]) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addvectorimage(imageid:cgpath:scale:drawingmode:fillcolor:strokecolor:)","title":"func addVectorImage(imageID: String, cgPath: CGPath, scale: CGFloat, drawingMode: CGPathDrawingMode, fillColor: CGColor?, strokeColor: CGColor?) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/hasimage(imageid:)","title":"func hasImage(imageID: String) -> Bool","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/hasmodel(modelid:)","title":"func hasModel(modelID: String) -> Bool","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/insertlayer(_:at:)","title":"func insertLayer(MapLayer, at: Int) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/insertlayer(_:before:)","title":"func insertLayer(MapLayer, before: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/layer(at:)","title":"func layer(at: Int) -> MapLayer?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/layer(by:)","title":"func layer(by: String) -> MapLayer?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removecurrentlocationimage()","title":"func removeCurrentLocationImage()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removecurrentlocationmodel()","title":"func removeCurrentLocationModel()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removeimage(imageid:)","title":"func removeImage(imageID: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removelayer(_:)","title":"func removeLayer(MapLayer)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removelayer(by:)","title":"func removeLayer(by: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removemodel(modelid:)","title":"func removeModel(modelID: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removesource(_:)","title":"func removeSource(MapDataSource)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removesource(by:)","title":"func removeSource(by: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removesprite(key:)","title":"func removeSprite(key: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setcurrentlocationcolors(colors:)","title":"func setCurrentLocationColors(colors: CurrentLocationColors)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setcurrentlocationimage(iconid:)","title":"func setCurrentLocationImage(iconID: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setcurrentlocationmodel(model:)","title":"func setCurrentLocationModel(model: CurrentLocationModel)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setsprite(data:metadata:key:)","title":"func setSprite(data: Data, metaData: String, key: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setsprite(url:key:)","title":"func setSprite(url: URL, key: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/source(at:)","title":"func source(at: Int) -> MapDataSource?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/source(by:)","title":"func source(by: String) -> MapDataSource?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapstyle","title":"MapStyle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/marker\/init(id:coordinates:imageid:alignment:zindex:)","title":"init(id: UInt32, coordinates: Coordinates, imageID: String, alignment: MarkerImageAlignment, zIndex: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/marker\/alignment","title":"let alignment: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/coordinates","title":"let coordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/id","title":"let id: UInt32","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/imageid","title":"let imageID: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/zindex","title":"let zIndex: Int32","type":"property"}],"path":"\/documentation\/mapsnativesdk\/marker","title":"Marker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/init(anchor:offset:)","title":"init(anchor: MarkerImageAlignment.Anchor, offset: CGPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.property","title":"let anchor: MarkerImageAlignment.Anchor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/offset","title":"var offset: CGPoint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> MarkerImageAlignment","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/bottom","title":"static let bottom: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/bottomleft","title":"static let bottomLeft: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/bottomright","title":"static let bottomRight: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/center","title":"static let center: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/left","title":"static let left: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/right","title":"static let right: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/top","title":"static let top: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/topleft","title":"static let topLeft: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/topright","title":"static let topRight: MarkerImageAlignment","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/right","title":"case right","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/top","title":"case top","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/topright","title":"case topRight","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum","title":"MarkerImageAlignment.Anchor","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/markerimagealignment","title":"MarkerImageAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybeangle3d\/init(angle:unit:)","title":"init(angle: MaybeVector3D, unit: Unit)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybeangle3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybeangle3d\/angle","title":"let angle: MaybeVector3D","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maybeangle3d\/unit","title":"let unit: Unit","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maybeangle3d","title":"MaybeAngle3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/init(vec:)","title":"init(vec: CGVector)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/init(x:y:)-5vt1k","title":"init(x: Double?, y: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/init(x:y:)-62u67","title":"init(x: Double, y: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/init(x:y:)-6ygdm","title":"init(x: Double, y: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/x","title":"let x: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/y","title":"let y: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/value(x:y:)-1o3hr","title":"static func value(x: Double, y: Double?) -> MaybeVector","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/value(x:y:)-2emf3","title":"static func value(x: Double, y: Double) -> MaybeVector","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector\/value(x:y:)-2g2s3","title":"static func value(x: Double?, y: Double) -> MaybeVector","type":"method"}],"path":"\/documentation\/mapsnativesdk\/maybevector","title":"MaybeVector","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(vec:)","title":"init(vec: Vector3D)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(x:y:z:)-1y2rs","title":"init(x: Double?, y: Double, z: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(x:y:z:)-3l031","title":"init(x: Double?, y: Double, z: Double?)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(x:y:z:)-5we90","title":"init(x: Double?, y: Double?, z: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(x:y:z:)-6y3k6","title":"init(x: Double, y: Double?, z: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(x:y:z:)-77f9j","title":"init(x: Double, y: Double, z: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(x:y:z:)-7ugtw","title":"init(x: Double, y: Double?, z: Double?)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/init(x:y:z:)-8c0z1","title":"init(x: Double, y: Double, z: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/x","title":"let x: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/y","title":"let y: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/z","title":"let z: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/value(x:y:z:)-1jnel","title":"static func value(x: Double?, y: Double, z: Double) -> MaybeVector3D","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/value(x:y:z:)-1uyo3","title":"static func value(x: Double?, y: Double, z: Double?) -> MaybeVector3D","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/value(x:y:z:)-2t5gl","title":"static func value(x: Double, y: Double?, z: Double) -> MaybeVector3D","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/value(x:y:z:)-4mhek","title":"static func value(x: Double, y: Double, z: Double) -> MaybeVector3D","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/value(x:y:z:)-80hgr","title":"static func value(x: Double, y: Double, z: Double?) -> MaybeVector3D","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/value(x:y:z:)-8vsoi","title":"static func value(x: Double, y: Double?, z: Double?) -> MaybeVector3D","type":"method"},{"path":"\/documentation\/mapsnativesdk\/maybevector3d\/value(x:y:z:)-kvof","title":"static func value(x: Double?, y: Double?, z: Double) -> MaybeVector3D","type":"method"}],"path":"\/documentation\/mapsnativesdk\/maybevector3d","title":"MaybeVector3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/init(_:)","title":"init(MapQuaternion)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/init(_:_:_:_:)","title":"init(Double, Double, Double, Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/nativerepresentation","title":"var nativeRepresentation: MapQuaternion","type":"property"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/w","title":"var w: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/z","title":"var z: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/quaternion\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/quaternion","title":"Quaternion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/init(_:)","title":"init(Vector3D)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/init(_:_:_:)","title":"init(Double, Double, Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/nativerepresentation","title":"var nativeRepresentation: Vector3D","type":"property"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/z","title":"var z: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/vector3d\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/vector3d","title":"Vector3D","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapedgeinsets","title":"MapEdgeInsets","type":"typealias"},{"path":"\/documentation\/mapsnativesdk\/platformcolor","title":"PlatformColor","type":"typealias"},{"path":"\/documentation\/mapsnativesdk\/platformimage","title":"PlatformImage","type":"typealias"},{"path":"\/documentation\/mapsnativesdk\/platformview","title":"PlatformView","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/long","title":"case long","type":"case"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/short","title":"case short","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/anglearc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/anglearc\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/anglearc\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/anglearc","title":"AngleArc","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/all","title":"case all","type":"case"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/drawselection","title":"case drawSelection","type":"case"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/handleevents","title":"case handleEvents","type":"case"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/none","title":"case none","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/featuresselectionmode","title":"FeaturesSelectionMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/mode16bit","title":"case mode16bit","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/mode1bit","title":"case mode1bit","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/mode2bit","title":"case mode2bit","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/mode32bit","title":"case mode32bit","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/mode4bit","title":"case mode4bit","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/mode64bit","title":"case mode64bit","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/mode8bit","title":"case mode8bit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapantialiasing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapantialiasing","title":"MapAntialiasing","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing\/easein","title":"case easeIn","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing\/easeinout","title":"case easeInOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing\/easeout","title":"case easeOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing\/flyto(curve:)","title":"case flyTo(curve: Double?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing\/linear","title":"case linear","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapcameraanimationeasing","title":"MapCameraAnimationEasing","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/ended","title":"case ended","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult","title":"MapCameraAnimationResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/anchor(_:)","title":"case anchor(Coordinates)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/center(_:)","title":"case center(Coordinates)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates","title":"MapCameraCoordinates","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/cancelled(message:)","title":"case cancelled(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/currentpositionnotset","title":"case currentPositionNotSet","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidargument(message:)","title":"case invalidArgument(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidlayer(message:)","title":"case invalidLayer(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidsource(message:)","title":"case invalidSource(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidstate(message:)","title":"case invalidState(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidstyle(message:)","title":"case invalidStyle(message: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maperror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maperror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maperror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maperror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maperror","title":"MapError","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/bearing","title":"let bearing: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/bounds","title":"let bounds: MapBounds","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/center","title":"let center: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/pitch","title":"let pitch: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/zoom","title":"let zoom: Double","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition","title":"MapEvent.CameraPosition","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/eventcoordinates\/geocoordinates","title":"let geoCoordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/eventcoordinates\/uicoordinates","title":"let uiCoordinates: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/eventcoordinates","title":"MapEvent.EventCoordinates","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/featuredetails\/centercoordinates","title":"let centerCoordinates: Coordinates?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/featuredetails\/coordinates","title":"let coordinates: MapEvent.EventCoordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/featuredetails\/featureid","title":"let featureId: UInt64","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/featuredetails\/islongtap","title":"let isLongTap: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/featuredetails\/sourceid","title":"let sourceId: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/featuredetails","title":"MapEvent.FeatureDetails","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameradidmove(state:reason:phase:)","title":"case cameraDidMove(state: MapEvent.CameraPosition, reason: MapEvent.CameraMovingReason, phase: MapEvent.CameraMovingPhase)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/featuredidselect(details:)","title":"case featureDidSelect(details: MapEvent.FeatureDetails)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/longtap(coordinates:)","title":"case longTap(coordinates: MapEvent.EventCoordinates)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/mapdidshow","title":"case mapDidShow","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/markerdidselect(id:coordinates:)","title":"case markerDidSelect(id: UInt32, coordinates: MapEvent.EventCoordinates)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/platformmarkerdidselect(id:)","title":"case platformMarkerDidSelect(id: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/scenepindidselect(pin:node:tapoffsetinnode:tapuicoordinates:islongtap:)","title":"case scenePinDidSelect(pin: MapPin, node: MapPinNode, tapOffsetInNode: CGVector, tapUiCoordinates: CGPoint, isLongtap: Bool)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/styledidset","title":"case styleDidSet","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/styledidupdate","title":"case styleDidUpdate","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/tap(coordinates:)","title":"case tap(coordinates: MapEvent.EventCoordinates)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/allcompleted","title":"case allCompleted","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/began","title":"case began","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/changed","title":"case changed","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/singlecompleted","title":"case singleCompleted","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase","title":"MapEvent.CameraMovingPhase","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/code","title":"case code","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/control(element:)","title":"case control(element: MapEvent.Control)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/custom(reason:)","title":"case custom(reason: Any)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/followmode","title":"case followMode","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/gesture","title":"case gesture","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/inertia","title":"case inertia","type":"case"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason","title":"MapEvent.CameraMovingReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/compass","title":"case compass","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/currentlocation","title":"case currentLocation","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/zoomarea","title":"case zoomArea","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/zoombuttons","title":"case zoomButtons","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/control","title":"MapEvent.Control","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/mapevent","title":"MapEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapfeatureid\/geojson(sourceid:featureid:)","title":"case geojson(sourceId: String, featureId: UInt64)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapfeatureid\/map(refid:)","title":"case map(refId: String)","type":"case"}],"path":"\/documentation\/mapsnativesdk\/mapfeatureid","title":"MapFeatureId","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/topright","title":"case topRight","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maplogoalignment","title":"MapLogoAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/followbearingandlocation","title":"case followBearingAndLocation","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/followlocation","title":"case followLocation","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/free","title":"case free","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapmode","title":"MapMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/parallel(_:)","title":"case parallel([MapNodeAction])","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/repeat(_:count:autoreverse:)","title":"case `repeat`(MapNodeAction, count: MapNodeActionCountMode, autoReverse: Bool)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/rotate(from:to:duration:easing:)","title":"case rotate(from: Angle?, to: Angle, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/rotate3d(from:to:arc:duration:easing:)","title":"case rotate3d(from: MaybeAngle3D?, to: MaybeAngle3D, arc: AngleArc, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/rotate3drelative(delta:duration:arc:easing:)","title":"case rotate3dRelative(delta: Quaternion, duration: TimeInterval, arc: AngleArc, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/rotaterelative(angle:duration:easing:)","title":"case rotateRelative(angle: Angle, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/scale(from:to:duration:easing:)","title":"case scale(from: MaybeVector?, to: MaybeVector, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/scale3d(from:to:duration:easing:)","title":"case scale3d(from: MaybeVector3D?, to: MaybeVector3D, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/scale3drelative(delta:duration:easing:)","title":"case scale3dRelative(delta: Vector3D, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/scalerelative(delta:duration:easing:)","title":"case scaleRelative(delta: CGVector, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/sequence(_:)","title":"case sequence([MapNodeAction])","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/translate(from:to:duration:easing:)","title":"case translate(from: MaybeVector?, to: MaybeVector, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/translate3d(from:to:duration:easing:)","title":"case translate3d(from: MaybeVector3D?, to: MaybeVector3D, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/translate3drelative(delta:duration:easing:)","title":"case translate3dRelative(delta: Vector3D, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/translaterelative(delta:duration:easing:)","title":"case translateRelative(delta: CGVector, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/wait(duration:)","title":"case wait(duration: TimeInterval)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapnodeaction","title":"MapNodeAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/easein","title":"case easeIn","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/easeinout","title":"case easeInOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/easeout","title":"case easeOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/sinein","title":"case sineIn","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/sineinout","title":"case sineInOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/sineout","title":"case sineOut","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing","title":"MapNodeActionAnimationEasing","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode\/count(value:)","title":"case count(value: Int)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode\/infinity","title":"case infinity","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode","title":"MapNodeActionCountMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/base(_:)","title":"case base(MapNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/image(_:)","title":"case image(MapImageNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/imagesequence(_:)","title":"case imageSequence(MapImageSequenceNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/location(_:)","title":"case location(MapLocationNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/skeletalmesh(_:)","title":"case skeletalMesh(MapSkeletalMeshNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/slideshow(_:)","title":"case slideshow(MapSlideshowNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/staticmesh(_:)","title":"case staticMesh(MapStaticMeshNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/switcher(_:)","title":"case switcher(MapSwitcherNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/text(_:)","title":"case text(MapTextNode)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/vectorshape(_:)","title":"case vectorShape(MapVectorShapeNode)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappinnode\/id","title":"var id: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mappinnode","title":"MapPinNode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/dark","title":"case dark","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/graylight","title":"case grayLight","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/main","title":"case main","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/navigationdark","title":"case navigationDark","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/navigationmain","title":"case navigationMain","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/simple","title":"case simple","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/simpledark","title":"case simpleDark","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle","title":"MapPredefinedStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/cancellationerror","title":"case cancellationError","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/layererror(_:)","title":"case layerError(String?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/loadererror(_:)","title":"case loaderError(String?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/sourceerror(_:)","title":"case sourceError(String?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/styleerror(_:)","title":"case styleError(String?)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror","title":"MapsNativeStyleError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapssdkconfigurator\/setup(baseurl:apikey:tilecacheoptions:modelcacheoptions:commoncacheoptions:tilereloadintervals:styleloadtimeout:tileloadtimeout:sourceloadtimeout:geojsonloadtimeout:dataloadtimeout:)","title":"static func setup(baseURL: String, apiKey: String, tileCacheOptions: DiskCacheOptions?, modelCacheOptions: DiskCacheOptions?, commonCacheOptions: DiskCacheOptions?, tileReloadIntervals: [UInt64], styleLoadTimeout: UInt64, tileLoadTimeout: UInt64, sourceLoadTimeout: UInt64, geoJsonLoadTimeout: UInt64, dataLoadTimeout: UInt64) -> Bool","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapssdkconfigurator","title":"MapsSDKConfigurator","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/enabled","title":"case enabled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/withfeatures","title":"case withFeatures","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/markersoverlapmode","title":"MarkersOverlapMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/hex(_:)","title":"case hex(String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/source(propertiesfield:)","title":"case source(propertiesField: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/uicolor(_:)","title":"case uiColor(PlatformColor)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/hexcolor","title":"static let hexcolor: PaintColor","type":"property"}],"path":"\/documentation\/mapsnativesdk\/paintcolor","title":"PaintColor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/source(propertiesfield:)","title":"case source(propertiesField: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/value(_:)","title":"case value(Double)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/opacity","title":"static let opacity: PaintOpacity","type":"property"}],"path":"\/documentation\/mapsnativesdk\/paintopacity","title":"PaintOpacity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/line","title":"case line","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/renderingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/renderingtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/renderingtype","title":"RenderingType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/unit\/degrees","title":"case degrees","type":"case"},{"path":"\/documentation\/mapsnativesdk\/unit\/radians","title":"case radians","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/unit\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/unit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/unit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/unit\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/unit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/unit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/unit","title":"Unit","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/corebridge\/corelatlonpoint\/init(_:)","title":"init?(CoreLatLonPoint?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/corebridge\/corelatlonpoint\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/corebridge\/corelatlonpoint","title":"CoreLatLonPoint","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/corebridge","title":"CoreBridge","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgpoint\/*(_:_:)-6ujvh","title":"static func * (CGPoint, CGPoint) -> CGPoint","type":"op"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgpoint\/*(_:_:)-9eona","title":"static func * (CGPoint, CGFloat) -> CGPoint","type":"op"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgpoint\/+(_:_:)","title":"static func + (CGPoint, CGSize) -> CGPoint","type":"op"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgpoint\/+=(_:_:)","title":"static func += (inout CGPoint, CGSize)","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgpoint\/init(_:)","title":"init?(CGPoint?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgpoint\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgpoint","title":"CGPoint","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgsize\/*(_:_:)","title":"static func * (CGSize, CGFloat) -> CGSize","type":"op"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgsize\/*=(_:_:)-21ha","title":"static func *= (inout CGSize, CGSize)","type":"op"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgsize\/*=(_:_:)-3n8fa","title":"static func *= (inout CGSize, CGFloat)","type":"op"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgsize\/+=(_:_:)","title":"static func += (inout CGSize, CGPoint)","type":"op"},{"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgsize\/-(_:_:)","title":"static func - (CGSize, CGFloat) -> CGSize","type":"op"}],"path":"\/documentation\/mapsnativesdk\/corefoundation\/cgsize","title":"CGSize","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/corefoundation","title":"CoreFoundation","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coregraphics\/cgimage\/scale","title":"var scale: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coregraphics\/cgimage\/mask(by:style:alpha:)","title":"func mask<S>(by: S, style: FillStyle, alpha: CGFloat) -> CGImage?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/coregraphics\/cgimage\/resize(to:)","title":"func resize(to: CGSize) -> CGImage?","type":"method"}],"path":"\/documentation\/mapsnativesdk\/coregraphics\/cgimage","title":"CGImage","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/coregraphics","title":"CoreGraphics","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/data\/stringrepresentation","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/foundation\/data\/json-implementations","title":"JSON Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/zero","title":"static let zero: NSEdgeInsets","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets","title":"NSEdgeInsets","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalcgpoint\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalcgpoint\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalcgpoint\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalcgpoint","title":"COptionalCGPoint","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon","title":"COptionalLatLon","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapbounds\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapbounds\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapbounds\/value","title":"COptionalMapBounds.Value","type":"typealias"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapbounds\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapbounds","title":"COptionalMapBounds","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapcurrentlocationmodel\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapcurrentlocationmodel\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapcurrentlocationmodel\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapcurrentlocationmodel","title":"COptionalMapCurrentLocationModel","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate","title":"COptionalMapViewCameraMotionState","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapbounds\/init(_:)","title":"init?(MapBounds?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapbounds\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapbounds","title":"MapBounds","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapcurrentlocationmodel\/init(_:)","title":"init?(MapCurrentLocationModel?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapcurrentlocationmodel\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapcurrentlocationmodel","title":"MapCurrentLocationModel","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate\/init(_:)","title":"init?(MapViewCameraMotionState?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate","title":"MapViewCameraMotionState","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge","title":"MapsNativeBridge","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/swiftuicore\/edgeinsets\/isnotzero","title":"var isNotZero: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/swiftuicore\/edgeinsets\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/swiftuicore\/edgeinsets\/zero","title":"static var zero: EdgeInsets","type":"property"}],"path":"\/documentation\/mapsnativesdk\/swiftuicore\/edgeinsets","title":"EdgeInsets","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/swiftuicore","title":"SwiftUICore","type":"extension"}],"path":"\/documentation\/mapsnativesdk","title":"MapsNativeSDK","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}